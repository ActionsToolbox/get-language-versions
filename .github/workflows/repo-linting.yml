name: Repository Linting

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  SLACK_NOTIFY: true

# Declare default permissions as read only.
permissions: read-all

jobs:
  get-go-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: ./
        id: get-language-versions
        with:
          language: "go"
          highest-only: true
          remove-patch-version: true

  actionlint:
    name: Action Lint
    needs: get-go-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Setup Go ${{ needs.get-go-version.outputs.version }}
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: ${{ needs.get-go-version.outputs.version }}
      - name: Run Action Lint
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/action-lint/master/pipeline.sh)

  get-ruby-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: ./
        id: get-language-versions
        with:
          language: "ruby"
          highest-only: true
          remove-patch-version: true

  awesomebot:
    name: Awesomebot
    needs: get-ruby-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Set up Ruby ${{ needs.get-ruby-version.outputs.version }}
        uses: ruby/setup-ruby@70da3bbf44ac06db1b0547ce2acc9380a5270d1e # v1.175.0
        with:
          ruby-version: ${{ needs.get-ruby-version.outputs.version }}
      - name: Run Awesomebot
        env:
          FLAGS: "default"
          EXCLUDE_FILES: "CHANGELOG.md"
          WHITELIST: "https://img.shields.io"
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/awesomebot/master/pipeline.sh)

  get-node-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: ./
        id: get-language-versions
        with:
          language: "node"
          highest-only: true
          remove-patch-version: true

  markdown-lint:
    name: Markdown Lint
    needs: get-node-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Setup node ${{ needs.get-node-version.outputs.version }}
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: ${{ needs.get-node-version.outputs.version }}
      - name: Run Markdown Lint
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/markdown-lint/master/pipeline.sh)
        env:
          EXCLUDE_FILES: "README.md"

  get-python-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - uses: ./
        id: get-language-versions
        with:
          language: "python"
          highest-only: true
          remove-patch-version: true

  yaml-lint:
    name: YAML Lint
    needs: get-python-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
      - name: Set up Python ${{ needs.get-python-version.outputs.version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ needs.get-python-version.outputs.version }}
      - name: Run YAML-Lint
        env:
          EXCLUDE_FILES: ".github/workflows"
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/yaml-lint/master/pipeline.sh)

  slack-workflow-status:
    if: always() && github.actor != 'dependabot[bot]'
    name: Slack Post Workflow Notification
    needs:
      - actionlint
      - awesomebot
      - markdown-lint
      - yaml-lint
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notifications
        if: ${{ env.SLACK_NOTIFY == 'true' && github.event_name == 'push' }}
        uses: Gamesight/slack-workflow-status@68bf00d0dbdbcb206c278399aa1ef6c14f74347a # v1.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          include_jobs: on-failure
          include_commit_message: true
